% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_dev.R
\name{add_shiny_module}
\alias{add_shiny_module}
\title{Add shiny module file}
\usage{
add_shiny_module(
  name,
  type = c("source", "test"),
  source_template = "mod_template.R",
  test_template = "test-mod_template.R",
  ignore = FALSE,
  open = TRUE,
  package = pkgload::pkg_name()
)
}
\arguments{
\item{name}{A character of module name, i.g. "abc".}

\item{type}{A character of type of target file to produce:
\itemize{
\item source: produce module source file as "mod_abc.R".
\item test: produce module test file as "test-mod_abc.R".
}}

\item{source_template}{A character of R source template, default is
"mod_template.R".}

\item{test_template}{A character of R source template, default is
"test-mod_template.R".}

\item{ignore}{A logical to indicate whether the produced file to be ignored
by git.}

\item{open}{A logical to indicate whether open the produced file.}

\item{package}{A character of package which contains templates files.
Default is current package returned by \code{\link[pkgload:packages]{pkgload::pkg_name()}}.}
}
\value{
A logical vector indicating if file was modified.
}
\description{
Create source/test file for a shiny module by template file in
templates directory of the packages.
}
\details{
This function is a wrapper of \code{\link[usethis:use_template]{usethis::use_template()}} to use shiny
module template.

It produces source file in "R" directory and test file in "tests/testthat"
directory. If target file existed, it would not overwrite it and
return FALSE.
}
\examples{
\dontrun{

# Create source file for module of "xyz"
add_shiny_module("xyz")

# Try integration test of module
xyz_app()

# Create test file for module of "xyz"
add_shiny_module("xyz", type = "test")

# Make sure tests of module is OK
testthat::test_file("tests/testthat/test-mod_xyz.R")
}
}
\seealso{
Other utils_dev: 
\code{\link{add_analysis_module}()},
\code{\link{debug_mode}},
\code{\link{save_debug_data}()}
}
\concept{utils_dev}
