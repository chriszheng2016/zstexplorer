% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_cs_cor_plotly.R
\name{cs_cor_plotly}
\alias{cs_cor_plotly}
\alias{cs_cor_plotly_ui}
\alias{cs_cor_plotly_server}
\alias{cs_cor_plotly_app}
\title{cs_cor_plotly}
\usage{
cs_cor_plotly_ui(id)

cs_cor_plotly_server(id, csbl_vars)

cs_cor_plotly_app(use_online_data = FALSE)
}
\arguments{
\item{id}{An ID string of module to connecting UI function and Server
function.}

\item{csbl_vars}{A tibble of vars of cross-section.}

\item{use_online_data}{A logical to determine whether to use test data from
database or not. Default FALSE means to use achieved data for tests.}
}
\value{
\itemize{
\item UI function doesn't return value.
}

\itemize{
\item Server function return a data frame of ...
}
}
\description{
A shiny module for cs_cor_plotly.
}
\details{
The module is an UI for user to display plots of display correlation
by \code{\link[plotly:plotly]{plotly}} package.
}
\section{Functions}{
\itemize{
\item \code{cs_cor_plotly_ui}: UI function of cs_cor_plotly.

\item \code{cs_cor_plotly_server}: Server function of cs_cor_plotly.

\item \code{cs_cor_plotly_app}: Testing App of cs_cor_plotly.
}}

\examples{
\dontrun{
# Set up control UI in app UI
ui <- fluidPage(
  cs_cor_plotly_ui("cs_cor_plotly_module")
)

# Call control server in App server
server <- function(input, output, session) {
  cs_cor_plotly <- cs_cor_plotly_server(
    "cs_cor_plotly_module",
    csbl_vars = reactive(csbl_vars)
  )
}

# Run testing App for integration testing
cs_cor_plotly_app()
}

}
