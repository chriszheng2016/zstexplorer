% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_load_factors.R
\name{load_factors}
\alias{load_factors}
\alias{load_factors_ui}
\alias{load_factors_server}
\alias{load_factors_app}
\title{Loading factors}
\usage{
load_factors_ui(id)

load_factors_server(id, factors_info)

load_factors_app()
}
\arguments{
\item{id}{An ID string of module to connecting UI function and Server
function.}

\item{factors_info}{A data frame of factor information for user to choose.}
}
\value{
\itemize{
\item UI function doesn't return value.
}

\itemize{
\item Server function return a data frame of selected factors from database.
}
}
\description{
A shiny module for loading factors specified by user from database.
}
\details{
The module is an UI for user to choose some factors to load from
database.

To use this module, you should assign same id parameter for
calling UI and Server function. Another parameter is factors_info returned
by \code{\link[zstmodelr:get_factors_info]{zstmodelr::get_factors_info()}}, for example:\preformatted{  # Open database
  stock_db <- zstmodelr::stock_db(zstmodelr::gta_db,
                                  get_golem_config("database_dsn"))
  zstmodelr::open_stock_db(stock_db)

  # Fetch factors information
  factors_info <- zstmodelr::get_factors_info(stock_db, factor_groups = NULL)

  # Close database
  zstmodelr::close_stock_db(stock_db)

}

To conduct integration testing, you could run \code{load_factors_app()},
for example:\preformatted{
  # Fetch factors information from database
  stock_db <- zstmodelr::stock_db(zstmodelr::gta_db,
                                  get_golem_config("database_dsn"))

  zstmodelr::open_stock_db(stock_db)
  factors_info <- zstmodelr::get_factors_info(stock_db, factor_groups = NULL)

  # Run Testing App
  load_factors_app(factors_info)

}
}
\section{Functions}{
\itemize{
\item \code{load_factors_ui}: UI function of loading factors.

\item \code{load_factors_server}: Server function of loading factors.

\item \code{load_factors_app}: Testing App of loading factors.
}}

\examples{
\dontrun{
# Set up control UI in app UI
ui <- fluidPage(
  load_factors_ui("load_factors_module", factors_info = factors_info)
)

# Call control server in App server
server <- function(input, output, session) {
  load_factors <- load_factors_server("load_factors_module",
    factors_info = reactive(factors_info)
  )
}

# Run testing App for integration testing
load_factors_app(factors_info)
}

}
